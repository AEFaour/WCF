//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceGestionGarage.ServiceReferenceWSGarage {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Voiture", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceGestionGarage.Model")]
    [System.SerializableAttribute()]
    public partial class Voiture : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatriculeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroChassisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Marque {
            get {
                return this.MarqueField;
            }
            set {
                if ((object.ReferenceEquals(this.MarqueField, value) != true)) {
                    this.MarqueField = value;
                    this.RaisePropertyChanged("Marque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Matricule {
            get {
                return this.MatriculeField;
            }
            set {
                if ((object.ReferenceEquals(this.MatriculeField, value) != true)) {
                    this.MatriculeField = value;
                    this.RaisePropertyChanged("Matricule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Numero {
            get {
                return this.NumeroField;
            }
            set {
                if ((this.NumeroField.Equals(value) != true)) {
                    this.NumeroField = value;
                    this.RaisePropertyChanged("Numero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumeroChassis {
            get {
                return this.NumeroChassisField;
            }
            set {
                if ((this.NumeroChassisField.Equals(value) != true)) {
                    this.NumeroChassisField = value;
                    this.RaisePropertyChanged("NumeroChassis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceWSGarage.IWSGarage")]
    public interface IWSGarage {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/AjoutVoitre", ReplyAction="http://tempuri.org/IWSGarage/AjoutVoitreResponse")]
        int AjoutVoitre(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/AjoutVoitre", ReplyAction="http://tempuri.org/IWSGarage/AjoutVoitreResponse")]
        System.Threading.Tasks.Task<int> AjoutVoitreAsync(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/SuppVoitureById", ReplyAction="http://tempuri.org/IWSGarage/SuppVoitureByIdResponse")]
        bool SuppVoitureById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/SuppVoitureById", ReplyAction="http://tempuri.org/IWSGarage/SuppVoitureByIdResponse")]
        System.Threading.Tasks.Task<bool> SuppVoitureByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/ModifVoiture", ReplyAction="http://tempuri.org/IWSGarage/ModifVoitureResponse")]
        bool ModifVoiture(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/ModifVoiture", ReplyAction="http://tempuri.org/IWSGarage/ModifVoitureResponse")]
        System.Threading.Tasks.Task<bool> ModifVoitureAsync(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/ListVoitures", ReplyAction="http://tempuri.org/IWSGarage/ListVoituresResponse")]
        WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[] ListVoitures();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/ListVoitures", ReplyAction="http://tempuri.org/IWSGarage/ListVoituresResponse")]
        System.Threading.Tasks.Task<WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[]> ListVoituresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/RechercheParCritere", ReplyAction="http://tempuri.org/IWSGarage/RechercheParCritereResponse")]
        WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[] RechercheParCritere(string critere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/RechercheParCritere", ReplyAction="http://tempuri.org/IWSGarage/RechercheParCritereResponse")]
        System.Threading.Tasks.Task<WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[]> RechercheParCritereAsync(string critere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/ListVoituresJson", ReplyAction="http://tempuri.org/IWSGarage/ListVoituresJsonResponse")]
        WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[] ListVoituresJson();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/ListVoituresJson", ReplyAction="http://tempuri.org/IWSGarage/ListVoituresJsonResponse")]
        System.Threading.Tasks.Task<WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[]> ListVoituresJsonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/ListVoituresXML", ReplyAction="http://tempuri.org/IWSGarage/ListVoituresXMLResponse")]
        WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[] ListVoituresXML();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/ListVoituresXML", ReplyAction="http://tempuri.org/IWSGarage/ListVoituresXMLResponse")]
        System.Threading.Tasks.Task<WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[]> ListVoituresXMLAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/ListeVoituresRSS", ReplyAction="http://tempuri.org/IWSGarage/ListeVoituresRSSResponse")]
        System.ServiceModel.Syndication.Rss20FeedFormatter ListeVoituresRSS();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/ListeVoituresRSS", ReplyAction="http://tempuri.org/IWSGarage/ListeVoituresRSSResponse")]
        System.Threading.Tasks.Task<System.ServiceModel.Syndication.Rss20FeedFormatter> ListeVoituresRSSAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/AjoutVoitureJson", ReplyAction="http://tempuri.org/IWSGarage/AjoutVoitureJsonResponse")]
        int AjoutVoitureJson(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/AjoutVoitureJson", ReplyAction="http://tempuri.org/IWSGarage/AjoutVoitureJsonResponse")]
        System.Threading.Tasks.Task<int> AjoutVoitureJsonAsync(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/ModifVoitureJson", ReplyAction="http://tempuri.org/IWSGarage/ModifVoitureJsonResponse")]
        bool ModifVoitureJson(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/ModifVoitureJson", ReplyAction="http://tempuri.org/IWSGarage/ModifVoitureJsonResponse")]
        System.Threading.Tasks.Task<bool> ModifVoitureJsonAsync(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/RechercheVoitureParCriterJson", ReplyAction="http://tempuri.org/IWSGarage/RechercheVoitureParCriterJsonResponse")]
        WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[] RechercheVoitureParCriterJson(string critere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/RechercheVoitureParCriterJson", ReplyAction="http://tempuri.org/IWSGarage/RechercheVoitureParCriterJsonResponse")]
        System.Threading.Tasks.Task<WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[]> RechercheVoitureParCriterJsonAsync(string critere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/RechercherVoitureParIdJson", ReplyAction="http://tempuri.org/IWSGarage/RechercherVoitureParIdJsonResponse")]
        WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture RechercherVoitureParIdJson(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSGarage/RechercherVoitureParIdJson", ReplyAction="http://tempuri.org/IWSGarage/RechercherVoitureParIdJsonResponse")]
        System.Threading.Tasks.Task<WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture> RechercherVoitureParIdJsonAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWSGarageChannel : WcfServiceGestionGarage.ServiceReferenceWSGarage.IWSGarage, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSGarageClient : System.ServiceModel.ClientBase<WcfServiceGestionGarage.ServiceReferenceWSGarage.IWSGarage>, WcfServiceGestionGarage.ServiceReferenceWSGarage.IWSGarage {
        
        public WSGarageClient() {
        }
        
        public WSGarageClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSGarageClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSGarageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSGarageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AjoutVoitre(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture) {
            return base.Channel.AjoutVoitre(voiture);
        }
        
        public System.Threading.Tasks.Task<int> AjoutVoitreAsync(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture) {
            return base.Channel.AjoutVoitreAsync(voiture);
        }
        
        public bool SuppVoitureById(int id) {
            return base.Channel.SuppVoitureById(id);
        }
        
        public System.Threading.Tasks.Task<bool> SuppVoitureByIdAsync(int id) {
            return base.Channel.SuppVoitureByIdAsync(id);
        }
        
        public bool ModifVoiture(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture) {
            return base.Channel.ModifVoiture(voiture);
        }
        
        public System.Threading.Tasks.Task<bool> ModifVoitureAsync(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture) {
            return base.Channel.ModifVoitureAsync(voiture);
        }
        
        public WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[] ListVoitures() {
            return base.Channel.ListVoitures();
        }
        
        public System.Threading.Tasks.Task<WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[]> ListVoituresAsync() {
            return base.Channel.ListVoituresAsync();
        }
        
        public WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[] RechercheParCritere(string critere) {
            return base.Channel.RechercheParCritere(critere);
        }
        
        public System.Threading.Tasks.Task<WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[]> RechercheParCritereAsync(string critere) {
            return base.Channel.RechercheParCritereAsync(critere);
        }
        
        public WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[] ListVoituresJson() {
            return base.Channel.ListVoituresJson();
        }
        
        public System.Threading.Tasks.Task<WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[]> ListVoituresJsonAsync() {
            return base.Channel.ListVoituresJsonAsync();
        }
        
        public WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[] ListVoituresXML() {
            return base.Channel.ListVoituresXML();
        }
        
        public System.Threading.Tasks.Task<WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[]> ListVoituresXMLAsync() {
            return base.Channel.ListVoituresXMLAsync();
        }
        
        public System.ServiceModel.Syndication.Rss20FeedFormatter ListeVoituresRSS() {
            return base.Channel.ListeVoituresRSS();
        }
        
        public System.Threading.Tasks.Task<System.ServiceModel.Syndication.Rss20FeedFormatter> ListeVoituresRSSAsync() {
            return base.Channel.ListeVoituresRSSAsync();
        }
        
        public int AjoutVoitureJson(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture) {
            return base.Channel.AjoutVoitureJson(voiture);
        }
        
        public System.Threading.Tasks.Task<int> AjoutVoitureJsonAsync(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture) {
            return base.Channel.AjoutVoitureJsonAsync(voiture);
        }
        
        public bool ModifVoitureJson(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture) {
            return base.Channel.ModifVoitureJson(voiture);
        }
        
        public System.Threading.Tasks.Task<bool> ModifVoitureJsonAsync(WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture voiture) {
            return base.Channel.ModifVoitureJsonAsync(voiture);
        }
        
        public WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[] RechercheVoitureParCriterJson(string critere) {
            return base.Channel.RechercheVoitureParCriterJson(critere);
        }
        
        public System.Threading.Tasks.Task<WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture[]> RechercheVoitureParCriterJsonAsync(string critere) {
            return base.Channel.RechercheVoitureParCriterJsonAsync(critere);
        }
        
        public WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture RechercherVoitureParIdJson(string id) {
            return base.Channel.RechercherVoitureParIdJson(id);
        }
        
        public System.Threading.Tasks.Task<WcfServiceGestionGarage.ServiceReferenceWSGarage.Voiture> RechercherVoitureParIdJsonAsync(string id) {
            return base.Channel.RechercherVoitureParIdJsonAsync(id);
        }
    }
}
